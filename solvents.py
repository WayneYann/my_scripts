"""
Used to run a Gaussian single point calculation in 8 different solvents
"""
from subprocess import Popen

solventList = {"n-octane", "water", "benzene", "pyridine", "tetrahydrofuran", "acetonitrile", "dichloromethane", "dimethylsulfoxide"}

for solvent in solventList:

    keywords = "# m062x/gen scrf(smd, solvent=" + solvent +") int=ultrafine freq nosymm"
    title = "OH + C3H7OH(CH-prim) ts"
    geometry = """0  2
  C     0.934501    1.370006    1.494807
  O     2.072673    0.594306    1.722478
  H     2.128993   -0.075508    1.035656
  O     1.538993    2.155752   -0.922816
  H     2.452939    2.355350   -0.665296
  C    -0.336953    0.579371    1.271989
  H     1.078696    2.002605    0.554989
  H     0.847662    2.070416    2.326689
  H    -0.176974   -0.102271    0.431853
  H    -0.527281   -0.033000    2.156420
  C    -1.517506    1.496250    0.976688
  H    -2.428380    0.924935    0.808679
  H    -1.699332    2.177818    1.808434
  H    -1.322791    2.094695    0.086446"""
    basisSet = """H  0
S  3 1.00
  3.386500000000E+01 2.549380000000E-02
  5.094790000000E+00 1.903730000000E-01
  1.158790000000E+00 8.521610000000E-01
S  1 1.00
  3.258400000000E-01 1.000000000000E+00
S  1 1.00
  1.027410000000E-01 1.000000000000E+00
P  1 1.00
  1.500000000000E+00 1.000000000000E+00
P  1 1.00
  3.750000000000E-01 1.000000000000E+00
****
C  0
S  6 1.00
  4.563240000000E+03 1.966650000000E-03
  6.820240000000E+02 1.523060000000E-02
  1.549730000000E+02 7.612690000000E-02
  4.445530000000E+01 2.608010000000E-01
  1.302900000000E+01 6.164620000000E-01
  1.827730000000E+00 2.210060000000E-01
S  3 1.00
  2.096420000000E+01 1.146600000000E-01
  4.803310000000E+00 9.199990000000E-01
  1.459330000000E+00 -3.030680000000E-03
S  1 1.00
  4.834560000000E-01 1.000000000000E+00
S  1 1.00
  1.455850000000E-01 1.000000000000E+00
S  1 1.00
  4.380000000000E-02 1.000000000000E+00
P  3 1.00
  2.096420000000E+01 4.024870000000E-02
  4.803310000000E+00 2.375940000000E-01
  1.459330000000E+00 8.158540000000E-01
P  1 1.00
  4.834560000000E-01 1.000000000000E+00
P  1 1.00
  1.455850000000E-01 1.000000000000E+00
P  1 1.00
  4.380000000000E-02 1.000000000000E+00
D  1 1.00
  1.252000000000E+00 1.000000000000E+00
D  1 1.00
  3.130000000000E-01 1.000000000000E+00
F  1 1.00
  8.000000000000E-01 1.000000000000E+00
****
O  0
S  6 1.00
  8.588500000000E+03 1.895150000000E-03
  1.297230000000E+03 1.438590000000E-02
  2.992960000000E+02 7.073200000000E-02
  8.737710000000E+01 2.400010000000E-01
  2.567890000000E+01 5.947970000000E-01
  3.740040000000E+00 2.808020000000E-01
S  3 1.00
  4.211750000000E+01 1.138890000000E-01
  9.628370000000E+00 9.208110000000E-01
  2.853320000000E+00 -3.274470000000E-03
S  1 1.00
  9.056610000000E-01 1.000000000000E+00
S  1 1.00
  2.556110000000E-01 1.000000000000E+00
S  1 1.00
  8.450000000000E-02 1.000000000000E+00
P  3 1.00
  4.211750000000E+01 3.651140000000E-02
  9.628370000000E+00 2.371530000000E-01
  2.853320000000E+00 8.197020000000E-01
P  1 1.00
  9.056610000000E-01 1.000000000000E+00
P  1 1.00
  2.556110000000E-01 1.000000000000E+00
P  1 1.00
  8.450000000000E-02 1.000000000000E+00
D  1 1.00
  2.584000000000E+00 1.000000000000E+00
D  1 1.00
  6.460000000000E-01 1.000000000000E+00
F  1 1.00
  1.400000000000E+00 1.000000000000E+00
****"""
    input_file_path = "SMD/H_Abs/OH_C3OH/CH/prim/ts"
    input_file_ext = ".gjf"
    input_file = open(input_file_path + input_file_ext, 'w')
    input_file.write(keywords + "\n\n" + title + "\n\n" + geometry + "\n\n" + basisSet + "\n\n")
    input_file.close()

    # submits the input file to Gaussian
    process = Popen(["/shared/apps/gaussian/G09_LINUX_LINDA/g09", input_file, input_file_path + "_" + solvent + ".log"])
    process.communicate() # necessary to wait for executable termination!
